k = 2; // when determining D for detection wrt. Dmax

dir_name = getArgument();
if (dir_name=="") exit ("script needs input folder path");
if (!File.exists(dir_name)) exit (dir_name + " does not exist");
if (!endsWith(dir_name, "/")) dir_name+="/";

folder_prefix = "syn_jun";

// loop directories and do the standardized detection take k*Dmax as argument

print("working... \n" + dir_name);

list = getFileList(dir_name);

for (i=0; i<list.length; i++) {

	if (endsWith(list[i], "/") && startsWith(list[i], folder_prefix)) {

		print(dir_name+list[i]);
		sub_list = getFileList(dir_name+list[i]);
        
        for (j=0; j<sub_list.length; j++) {
        
			if (endsWith(dir_name+list[i]+sub_list[j], ".tif")) {

				// detection parameters
				components = split(list[i], ",");
				Dmax        = parseFloat(components[1]);
				Ddet        = k   * Dmax;
				L           = 10;
                masker_R    = round(Ddet);

				open(dir_name+list[i]+sub_list[j]);
                //run("Remove Overlay");

                arg = "bifurcations endpoints s=1.1 dlist="+toString(Ddet)+
                      				    " m=1 l="+toString(L)+
                      				    " radius="+toString(masker_R)+
                      				    " percentile=50 ncc_high=0.90 ncc_low=0.10 likelihood_high=0.50 likelihood_low=0.10 out=0.40";

                print(dir_name+list[i]+sub_list[j]+" ---> \n"+arg);
				run("Detector2D", arg);

				close();
				
			}
        
        }
        
    }
     
}

print("DONE");