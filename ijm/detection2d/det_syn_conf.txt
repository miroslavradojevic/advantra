// take one configuration and test the detection for different detection parameters
// loop D (with respect to the maximal D in the configuration),
// loop ncc range (mainly ncc_low),
// loop likelihood range (mainly likelihood_high)

s=1.1;
L = 10;
ncc_high=0.95;
likelihood_low=0;
out=0.4;

dir_name = getArgument();
if (dir_name=="") exit ("script needs input folder path");
if (!File.exists(dir_name)) exit (dir_name + " does not exist");
if (!endsWith(dir_name, "/")) dir_name+="/";

folder_prefix = "synjun"; // expect folders with such prefix in

print("scanning... " + dir_name);

list = getFileList(dir_name);

for (i=0; i<list.length; i++) {  // loop folders with configurations

	if (endsWith(list[i], "/") && startsWith(list[i], folder_prefix)) {

		//print(dir_name+list[i]);
		sub_list = getFileList(dir_name+list[i]);

        for (j=0; j<sub_list.length; j++) { // loop files in each folder

            // list[]       contains generation parameters
            // sub_list[]   contains file names

			if (endsWith(dir_name+list[i]+sub_list[j], ".tif")) {

				// set detection parameters
				components = split(list[i], "_");
				Dmax        = parseFloat(components[1]);

				// found .tif, now loop the parameters to detect
				print(dir_name+list[i]+sub_list[j]);

				// loop k(*Dmax) 0.5-3 (0.5)
				for (k=0.5; k<3; k+=0.5) {

					// loop ncc_low 0.2-0.8 (0.2)
					for (ncc_low=0.2; ncc_low<0.8; ncc_low+=0.2) {

						// loop likelihood_high 0.2-0.8 (0.2)
						for (likelihood_high=0.2; likelihood_high<0.8; likelihood_high+=0.2) {

							Ddet        = k   * Dmax;

                            run("Critpoint2D",
                            				"select="+dir_name+list[i]+sub_list[j]+" "+
                            				"bifurcations "+
                            				"endpoints "+ // no interactive for batch execution
                            				"s="+toString(s)+" "+
                            				"dlist="+toString(Ddet)+" "+
                            				"l="+toString(L)+" "+
                            				"ncc_high="+toString(ncc_high)+" "+
                            				"ncc_low="+toString(ncc_low)+" "+
                            				"likelihood_high="+toString(likelihood_high)+" "+
                            				"likelihood_low="+toString(likelihood_low)+" "+
                            				"out_sig="+toString(out)+"");
						}

					}

				}



				//close();
                //run("Close All");

			}

        }

    }

}

print("DONE");
