// generate random configurations by varying (p1, p2, p3) configurations
// three numbres p1,p2,p3 describe the configurations
// snr,Dmin,#images are expected as an argument, folder is placed in current folder
// parameters are embedded in its name
// makes the synthetic data to test how it performs for different scales
// fixed ratio ranges p=[0.2, 0.6] P1=(0.6 0.2 0.2) P2=(0.2 0.6 0.2) P3=(0.2 0.2 0.6)

pmin = 0.2;
pmax = 0.6;

P0 = newArray(0.333,0.333,0.333);
P1 = newArray(pmax,pmin,pmin);
P2 = newArray(pmin,pmax,pmin);
P3 = newArray(pmin,pmin,pmax);

// default values
snr 	= 3;
nr_img 	= 1;
Dmin 	= 3;     // minimum detectable, corresponds to the lowest pi in the configuration
step 	= 0.09;  // resolution for the triangle
sc		= 8;

generation_arguments = getArgument();
if (generation_arguments=="") exit ("script needs 3 argument string: 'SNR,DMIN,NRIMG'");
args = split(generation_arguments, ",");
if (args.length != 3) exit("script needs 3 argument string: 'SNR,DMIN,NRIMG'");

// redefine default values based on the input arguments
snr = parseFloat(args[0]);
Dmin = parseFloat(args[1]);
nr_img = parseFloat(args[2]);

// export output directory
out_dir = "varyp.snr.dmin.nrimg._"+toString(snr,1)+"_"+toString(Dmin,1)+"_"+toString(nr_img);
File.makeDirectory(out_dir); print("created export folder "+out_dir);

a = sqrt(2) * (pmax-pmin);
H = a/(2*sqrt(3));
W = a/2;

P12 = newArray(3);        				
for (i=0; i<3; i++) P12[i] = (P1[i]+P2[i]) / 2;

vx = newArray(3);
for (i=0; i<3; i++) vx[i] = P12[i]-P0[i];
vx_norm = sqrt(pow(vx[0],2)+pow(vx[1],2)+pow(vx[2],2));
for (i=0; i<3; i++) vx[i] = vx[i] / vx_norm;

vy = newArray(3);
for (i=0; i<3; i++) vy[i] = P2[i]-P12[i];
vy_norm = sqrt(pow(vy[0],2)+pow(vy[1],2)+pow(vy[2],2));
for (i=0; i<3; i++) vy[i] = vy[i] / vy_norm;

p = newArray(3);
cnt=0;
for (x=0; x<=H; x+=step) {
	for (y=0; y<=x*sqrt(3); y+=step) {
		for (i=0; i<3; i++) p[i] = P0[i] + x * vx[i] + y * vy[i];
		run("Generate Junctions", 
			" snr="+toString(snr)+
			" p1="+toString(p[0])+
			" p2="+toString(p[1])+
			" p3="+toString(p[2])+
			" scale="+toString(sc)+
			" dmin="+toString(Dmin)+
			" #="+toString(nr_img)+
			" out="+out_dir);
		cnt++;
	}
}

print("DONE, "+cnt+" folders created");

for (x=0; x<=H; x+=step) {
	for (y=0; y<=x*sqrt(3); y+=step) {
		for (i=0; i<3; i++) p[i] = P0[i] + x * vx[i] + y * vy[i];
		//print(p[0]+","+p[1]+","+p[2]);
	}
}

