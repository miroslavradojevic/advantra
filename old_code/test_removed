int X = 261, Y = 137, Z = 27;
		int index = masker_output.locIndexZXY[Z][X][Y];
		System.out.println("index: "+index);
		System.out.println("check: Z: "+masker_output.foregroundLocsZXY[index][0]+", X: "+masker_output.foregroundLocsZXY[index][1]+", Y: "+masker_output.foregroundLocsZXY[index][2]);


		short[] curr_profile =  Profiler3D.prof3[index];
		ImagePlus img_profile = new ImagePlus("profile", sph3D.drawProfile(curr_profile));
		ArrayList<int[]> locs = sph3D.profilePeaksXY(curr_profile);
		Overlay ov_peaks = new Overlay();
		for (int ll = 0; ll<locs.size(); ll++) {
			ov_peaks.add(new PointRoi(locs.get(ll)[0]+.5, locs.get(ll)[1]+.5));
		}

		ArrayList<Integer> peakIdxs = sph3D.profilePeaks(curr_profile);
		for (int jj = 0; jj<peakIdxs.size(); jj++) { // masks.get(ii).length
			for (int ii=0; ii<sph3D.masks.get(peakIdxs.get(jj)).length; ii++) {

				int neighbourIdx = sph3D.masks.get(peakIdxs.get(jj))[ii];
				int neighbourXplot = sph3D.vizXY.get(neighbourIdx)[0];
				int neighbourYplot = sph3D.vizXY.get(neighbourIdx)[1];
				PointRoi pt_mask = new PointRoi(neighbourXplot+.5, neighbourYplot+.5);
				pt_mask.setFillColor(Color.BLUE);
				ov_peaks.add(pt_mask);

			}
		}

		img_profile.setOverlay(ov_peaks);
		img_profile.show();


		Overlay ov = new Overlay();
		PointRoi pt = new PointRoi(X+0.5, Y+0.5);
		pt.setPosition(Z);
		pt.setStrokeColor(Color.RED);
		pt.setFillColor(Color.RED);
		ov.add(pt);

		for (int ii = 0; ii< 4; ii++) {
			System.out.println("peak "+ii+" -> "+Arrays.toString(PeakExtractor3D.peaks3[index][ii]));
			pt = new PointRoi(PeakExtractor3D.peaks3[index][ii][0]+.5, PeakExtractor3D.peaks3[index][ii][1]+.5);
			pt.setPosition(PeakExtractor3D.peaks3[index][ii][2]);
			ov.add(pt);
		}

		inimg.setOverlay(ov);
		inimg.show();

		new ImagePlus("masks", sph3D.visualizeMasks()).show();

